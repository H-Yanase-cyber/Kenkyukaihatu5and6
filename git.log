*   commit 07fdef3cdbfab22222a1aca6bc51ea9cb02da5e6 (from 4c729cb12227ebf77ea3cf0a986d7fd028d7240d)
|\  Merge: 4c729cb fd83a7f
| | Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| | Date:   Mon May 26 23:12:25 2025 +0900
| | 
| |     Merge branch 'purple'
| | 
| | diff --git a/js/tetris.js b/js/tetris.js
| | index 993b5b0..1d451cd 100644
| | --- a/js/tetris.js
| | +++ b/js/tetris.js
| | @@ -22,7 +22,7 @@ var shapes = [
| |        1, 1, 1 ]
| |  ];
| |  var colors = [
| | -    'yellow', 'yellow', 'yellow', 'yellow', 'yellow', 'yellow', 'yellow'
| | +    'purple', 'purple', 'purple', 'purple', 'purple', 'purple', 'purple'
| |  ];
| |  
| |  // creates a new 4x4 shape in global variable 'current'
| | 
| * commit fd83a7f98fa25ecf54254f137bfb0b3c46978a1d
| | Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| | Date:   Mon May 26 23:08:39 2025 +0900
| | 
| |     ミノの色を全て紫に変更
| | 
| | diff --git a/js/tetris.js b/js/tetris.js
| | index d9a43f9..1d451cd 100644
| | --- a/js/tetris.js
| | +++ b/js/tetris.js
| | @@ -22,7 +22,7 @@ var shapes = [
| |        1, 1, 1 ]
| |  ];
| |  var colors = [
| | -    'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'
| | +    'purple', 'purple', 'purple', 'purple', 'purple', 'purple', 'purple'
| |  ];
| |  
| |  // creates a new 4x4 shape in global variable 'current'
| | 
* | commit 4c729cb12227ebf77ea3cf0a986d7fd028d7240d
|/  Author: H-Yanase-cyber <2004hirofumi@gmail.com>
|   Date:   Mon May 26 23:11:26 2025 +0900
|   
|       ミノの色を黄色に変更
|   
|   diff --git a/js/tetris.js b/js/tetris.js
|   index d9a43f9..993b5b0 100644
|   --- a/js/tetris.js
|   +++ b/js/tetris.js
|   @@ -22,7 +22,7 @@ var shapes = [
|          1, 1, 1 ]
|    ];
|    var colors = [
|   -    'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'
|   +    'yellow', 'yellow', 'yellow', 'yellow', 'yellow', 'yellow', 'yellow'
|    ];
|    
|    // creates a new 4x4 shape in global variable 'current'
|   
*   commit a921086536327b2d1147a8918aca8a2f536f47d7 (from 6a7d68826815319adf1aed482854e644df03ea3e)
|\  Merge: 6a7d688 370e6ba
| | Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| | Date:   Mon May 26 23:06:44 2025 +0900
| | 
| |     ミノの色を全てブルーに変更
| | 
| | diff --git a/js/tetris.js b/js/tetris.js
| | index 18ee546..d9a43f9 100644
| | --- a/js/tetris.js
| | +++ b/js/tetris.js
| | @@ -22,7 +22,7 @@ var shapes = [
| |        1, 1, 1 ]
| |  ];
| |  var colors = [
| | -    'green', 'green', 'green', 'green', 'green', 'green', 'green'
| | +    'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'
| |  ];
| |  
| |  // creates a new 4x4 shape in global variable 'current'
| | 
| * commit 370e6ba9872b5c6ebfb47a30e60d6ea2bafb94ff
| | Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| | Date:   Mon May 26 22:57:02 2025 +0900
| | 
| |     Update tetris.js
| | 
| | diff --git a/js/tetris.js b/js/tetris.js
| | index 975a7a2..d9a43f9 100644
| | --- a/js/tetris.js
| | +++ b/js/tetris.js
| | @@ -22,7 +22,7 @@ var shapes = [
| |        1, 1, 1 ]
| |  ];
| |  var colors = [
| | -    'cyan', 'orange', 'skyblue', 'yellow', 'red', 'lime', 'purple'
| | +    'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue'
| |  ];
| |  
| |  // creates a new 4x4 shape in global variable 'current'
| | 
* | commit 6a7d68826815319adf1aed482854e644df03ea3e
|/  Author: H-Yanase-cyber <2004hirofumi@gmail.com>
|   Date:   Mon May 26 22:54:24 2025 +0900
|   
|       Update tetris.js
|   
|   diff --git a/js/tetris.js b/js/tetris.js
|   index 975a7a2..18ee546 100644
|   --- a/js/tetris.js
|   +++ b/js/tetris.js
|   @@ -22,7 +22,7 @@ var shapes = [
|          1, 1, 1 ]
|    ];
|    var colors = [
|   -    'cyan', 'orange', 'skyblue', 'yellow', 'red', 'lime', 'purple'
|   +    'green', 'green', 'green', 'green', 'green', 'green', 'green'
|    ];
|    
|    // creates a new 4x4 shape in global variable 'current'
| 
* commit f69ab2fc7dd4eb397429d4a0cb75d861be8bce47
| Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| Date:   Mon May 26 22:52:43 2025 +0900
| 
|     Create .DS_Store
| 
| diff --git a/.DS_Store b/.DS_Store
| new file mode 100644
| index 0000000..8c380cd
| Binary files /dev/null and b/.DS_Store differ
| 
* commit 29f77c51376dba09350cf94e772d01d818911a2b
| Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| Date:   Mon May 26 22:41:35 2025 +0900
| 
|     Update tetris.js
| 
| diff --git a/js/tetris.js b/js/tetris.js
| index 2af5c54..975a7a2 100644
| --- a/js/tetris.js
| +++ b/js/tetris.js
| @@ -22,7 +22,7 @@ var shapes = [
|        1, 1, 1 ]
|  ];
|  var colors = [
| -    'skyblue', 'orange', 'blue', 'yellow', 'red', 'lime', 'purple'
| +    'cyan', 'orange', 'skyblue', 'yellow', 'red', 'lime', 'purple'
|  ];
|  
|  // creates a new 4x4 shape in global variable 'current'
| 
* commit 2565f108593fdaffe44495101ab8a2fc57a724f5
| Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| Date:   Mon May 26 22:40:17 2025 +0900
| 
|     Update tetris.js
| 
| diff --git a/js/tetris.js b/js/tetris.js
| index 975a7a2..2af5c54 100644
| --- a/js/tetris.js
| +++ b/js/tetris.js
| @@ -22,7 +22,7 @@ var shapes = [
|        1, 1, 1 ]
|  ];
|  var colors = [
| -    'cyan', 'orange', 'skyblue', 'yellow', 'red', 'lime', 'purple'
| +    'skyblue', 'orange', 'blue', 'yellow', 'red', 'lime', 'purple'
|  ];
|  
|  // creates a new 4x4 shape in global variable 'current'
| 
* commit a781516b67eee399e2dde52651c01b4398fba9da
| Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| Date:   Mon May 26 22:39:12 2025 +0900
| 
|     Update tetris.js
| 
| diff --git a/js/tetris.js b/js/tetris.js
| index 2af5c54..975a7a2 100644
| --- a/js/tetris.js
| +++ b/js/tetris.js
| @@ -22,7 +22,7 @@ var shapes = [
|        1, 1, 1 ]
|  ];
|  var colors = [
| -    'skyblue', 'orange', 'blue', 'yellow', 'red', 'lime', 'purple'
| +    'cyan', 'orange', 'skyblue', 'yellow', 'red', 'lime', 'purple'
|  ];
|  
|  // creates a new 4x4 shape in global variable 'current'
| 
* commit e4defe222b20e1863068a786259d00bc152495c3
| Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| Date:   Mon May 26 22:31:02 2025 +0900
| 
|     ピースの色を変更
| 
| diff --git a/js/tetris.js b/js/tetris.js
| index aa01c14..2af5c54 100644
| --- a/js/tetris.js
| +++ b/js/tetris.js
| @@ -22,7 +22,7 @@ var shapes = [
|        1, 1, 1 ]
|  ];
|  var colors = [
| -    'cyan', 'orange', 'blue', 'yellow', 'red', 'lime', 'purple'
| +    'skyblue', 'orange', 'blue', 'yellow', 'red', 'lime', 'purple'
|  ];
|  
|  // creates a new 4x4 shape in global variable 'current'
| 
* commit 04b1600afa9591a803bcdb45e666be62131a71ee
| Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| Date:   Mon May 26 22:25:40 2025 +0900
| 
|     ピースの落ちてくる速度を変更
| 
| diff --git a/js/tetris.js b/js/tetris.js
| index 2f180ce..aa01c14 100644
| --- a/js/tetris.js
| +++ b/js/tetris.js
| @@ -199,7 +199,7 @@ function newGame() {
|      init();
|      newShape();
|      lose = false;
| -    interval = setInterval( tick, 400 );
| +    interval = setInterval( tick, 1000 );
|  }
|  
|  function clearAllIntervals(){
| 
* commit 60bb31ec32fad5965d9a6dd20936494273d24e17
| Author: H-Yanase-cyber <2004hirofumi@gmail.com>
| Date:   Mon May 26 22:19:30 2025 +0900
| 
|     Update tetris.js
| 
| diff --git a/js/tetris.js b/js/tetris.js
| index 8cf0c14..2f180ce 100644
| --- a/js/tetris.js
| +++ b/js/tetris.js
| @@ -22,7 +22,7 @@ var shapes = [
|        1, 1, 1 ]
|  ];
|  var colors = [
| -    'cyan', 'orange', 'blue', 'yellow', 'red', 'green', 'purple'
| +    'cyan', 'orange', 'blue', 'yellow', 'red', 'lime', 'purple'
|  ];
|  
|  // creates a new 4x4 shape in global variable 'current'
| 
* commit bfd8e7156180855ad8bba77af59c42519dd4213c
  Author: H-Yanase-cyber <2004hirofumi@gmail.com>
  Date:   Mon May 26 22:05:44 2025 +0900
  
      Canvas-tetrisのソースコードをインポート
  
  diff --git a/.quadnix/build.yml b/.quadnix/build.yml
  new file mode 100644
  index 0000000..be92530
  --- /dev/null
  +++ b/.quadnix/build.yml
  @@ -0,0 +1 @@
  +version: 0.1
  diff --git a/LICENSE.md b/LICENSE.md
  new file mode 100644
  index 0000000..b88b4ce
  --- /dev/null
  +++ b/LICENSE.md
  @@ -0,0 +1,21 @@
  +MIT License
  +
  +Copyright (c) 2012 Dionysis "dionyziz" Zindros dionyziz@gmail.com
  +
  +Permission is hereby granted, free of charge, to any person obtaining a copy
  +of this software and associated documentation files (the "Software"), to deal
  +in the Software without restriction, including without limitation the rights
  +to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  +copies of the Software, and to permit persons to whom the Software is
  +furnished to do so, subject to the following conditions:
  +
  +The above copyright notice and this permission notice shall be included in all
  +copies or substantial portions of the Software.
  +
  +THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  +IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  +FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  +AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  +LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  +OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  +SOFTWARE.
  diff --git a/README.md b/README.md
  new file mode 100644
  index 0000000..ac87e2d
  --- /dev/null
  +++ b/README.md
  @@ -0,0 +1,13 @@
  +このリポジトリは https://github.com/dionyziz/canvas-tetris がオリジナルです。
  +
  +オリジナルのソースコードのLicense
  +=======
  +This version of tetris is MIT licensed:
  +
  +Copyright (C) 2012 Dionysis "dionyziz" Zindros <dionyziz@gmail.com>
  +
  +Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
  +
  +The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
  +
  +THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  diff --git a/index.html b/index.html
  new file mode 100644
  index 0000000..6a1ce43
  --- /dev/null
  +++ b/index.html
  @@ -0,0 +1,15 @@
  +<!DOCTYPE html>
  +<html>
  +    <head>
  +        <title>HTML5 Tetris</title>
  +        <link rel='stylesheet' href='style.css' />
  +    </head>
  +    <body>
  +        <audio id="clearsound" src="sound/pop.ogg" preload="auto"></audio>
  +        <canvas width='300' height='600'></canvas>
  +        <button id="playbutton" onclick="playButtonClicked();">Play</button>
  +        <script src='js/tetris.js'></script>
  +        <script src='js/controller.js'></script>
  +        <script src='js/render.js'></script>
  +    </body>
  +</html>
  diff --git a/js/controller.js b/js/controller.js
  new file mode 100644
  index 0000000..6e3fee5
  --- /dev/null
  +++ b/js/controller.js
  @@ -0,0 +1,13 @@
  +document.body.onkeydown = function( e ) {
  +    var keys = {
  +        37: 'left',
  +        39: 'right',
  +        40: 'down',
  +        38: 'rotate',
  +        32: 'drop'
  +    };
  +    if ( typeof keys[ e.keyCode ] != 'undefined' ) {
  +        keyPress( keys[ e.keyCode ] );
  +        render();
  +    }
  +};
  diff --git a/js/render.js b/js/render.js
  new file mode 100644
  index 0000000..9bda62f
  --- /dev/null
  +++ b/js/render.js
  @@ -0,0 +1,36 @@
  +var canvas = document.getElementsByTagName( 'canvas' )[ 0 ];
  +var ctx = canvas.getContext( '2d' );
  +var W = 300, H = 600;
  +var BLOCK_W = W / COLS, BLOCK_H = H / ROWS;
  +
  +// draw a single square at (x, y)
  +function drawBlock( x, y ) {
  +    ctx.fillRect( BLOCK_W * x, BLOCK_H * y, BLOCK_W - 1 , BLOCK_H - 1 );
  +    ctx.strokeRect( BLOCK_W * x, BLOCK_H * y, BLOCK_W - 1 , BLOCK_H - 1 );
  +}
  +
  +// draws the board and the moving shape
  +function render() {
  +    ctx.clearRect( 0, 0, W, H );
  +
  +    ctx.strokeStyle = 'black';
  +    for ( var x = 0; x < COLS; ++x ) {
  +        for ( var y = 0; y < ROWS; ++y ) {
  +            if ( board[ y ][ x ] ) {
  +                ctx.fillStyle = colors[ board[ y ][ x ] - 1 ];
  +                drawBlock( x, y );
  +            }
  +        }
  +    }
  +
  +    ctx.fillStyle = 'red';
  +    ctx.strokeStyle = 'black';
  +    for ( var y = 0; y < 4; ++y ) {
  +        for ( var x = 0; x < 4; ++x ) {
  +            if ( current[ y ][ x ] ) {
  +                ctx.fillStyle = colors[ current[ y ][ x ] - 1 ];
  +                drawBlock( currentX + x, currentY + y );
  +            }
  +        }
  +    }
  +}
  \ No newline at end of file
  diff --git a/js/tetris.js b/js/tetris.js
  new file mode 100644
  index 0000000..8cf0c14
  --- /dev/null
  +++ b/js/tetris.js
  @@ -0,0 +1,208 @@
  +var COLS = 10, ROWS = 20;
  +var board = [];
  +var lose;
  +var interval;
  +var intervalRender;
  +var current; // current moving shape
  +var currentX, currentY; // position of current shape
  +var freezed; // is current shape settled on the board?
  +var shapes = [
  +    [ 1, 1, 1, 1 ],
  +    [ 1, 1, 1, 0,
  +      1 ],
  +    [ 1, 1, 1, 0,
  +      0, 0, 1 ],
  +    [ 1, 1, 0, 0,
  +      1, 1 ],
  +    [ 1, 1, 0, 0,
  +      0, 1, 1 ],
  +    [ 0, 1, 1, 0,
  +      1, 1 ],
  +    [ 0, 1, 0, 0,
  +      1, 1, 1 ]
  +];
  +var colors = [
  +    'cyan', 'orange', 'blue', 'yellow', 'red', 'green', 'purple'
  +];
  +
  +// creates a new 4x4 shape in global variable 'current'
  +// 4x4 so as to cover the size when the shape is rotated
  +function newShape() {
  +    var id = Math.floor( Math.random() * shapes.length );
  +    var shape = shapes[ id ]; // maintain id for color filling
  +
  +    current = [];
  +    for ( var y = 0; y < 4; ++y ) {
  +        current[ y ] = [];
  +        for ( var x = 0; x < 4; ++x ) {
  +            var i = 4 * y + x;
  +            if ( typeof shape[ i ] != 'undefined' && shape[ i ] ) {
  +                current[ y ][ x ] = id + 1;
  +            }
  +            else {
  +                current[ y ][ x ] = 0;
  +            }
  +        }
  +    }
  +    
  +    // new shape starts to move
  +    freezed = false;
  +    // position where the shape will evolve
  +    currentX = 5;
  +    currentY = 0;
  +}
  +
  +// clears the board
  +function init() {
  +    for ( var y = 0; y < ROWS; ++y ) {
  +        board[ y ] = [];
  +        for ( var x = 0; x < COLS; ++x ) {
  +            board[ y ][ x ] = 0;
  +        }
  +    }
  +}
  +
  +// keep the element moving down, creating new shapes and clearing lines
  +function tick() {
  +    if ( valid( 0, 1 ) ) {
  +        ++currentY;
  +    }
  +    // if the element settled
  +    else {
  +        freeze();
  +        valid(0, 1);
  +        clearLines();
  +        if (lose) {
  +            clearAllIntervals();
  +            return false;
  +        }
  +        newShape();
  +    }
  +}
  +
  +// stop shape at its position and fix it to board
  +function freeze() {
  +    for ( var y = 0; y < 4; ++y ) {
  +        for ( var x = 0; x < 4; ++x ) {
  +            if ( current[ y ][ x ] ) {
  +                board[ y + currentY ][ x + currentX ] = current[ y ][ x ];
  +            }
  +        }
  +    }
  +    freezed = true;
  +}
  +
  +// returns rotates the rotated shape 'current' perpendicularly anticlockwise
  +function rotate( current ) {
  +    var newCurrent = [];
  +    for ( var y = 0; y < 4; ++y ) {
  +        newCurrent[ y ] = [];
  +        for ( var x = 0; x < 4; ++x ) {
  +            newCurrent[ y ][ x ] = current[ 3 - x ][ y ];
  +        }
  +    }
  +
  +    return newCurrent;
  +}
  +
  +// check if any lines are filled and clear them
  +function clearLines() {
  +    for ( var y = ROWS - 1; y >= 0; --y ) {
  +        var rowFilled = true;
  +        for ( var x = 0; x < COLS; ++x ) {
  +            if ( board[ y ][ x ] == 0 ) {
  +                rowFilled = false;
  +                break;
  +            }
  +        }
  +        if ( rowFilled ) {
  +            document.getElementById( 'clearsound' ).play();
  +            for ( var yy = y; yy > 0; --yy ) {
  +                for ( var x = 0; x < COLS; ++x ) {
  +                    board[ yy ][ x ] = board[ yy - 1 ][ x ];
  +                }
  +            }
  +            ++y;
  +        }
  +    }
  +}
  +
  +function keyPress( key ) {
  +    switch ( key ) {
  +        case 'left':
  +            if ( valid( -1 ) ) {
  +                --currentX;
  +            }
  +            break;
  +        case 'right':
  +            if ( valid( 1 ) ) {
  +                ++currentX;
  +            }
  +            break;
  +        case 'down':
  +            if ( valid( 0, 1 ) ) {
  +                ++currentY;
  +            }
  +            break;
  +        case 'rotate':
  +            var rotated = rotate( current );
  +            if ( valid( 0, 0, rotated ) ) {
  +                current = rotated;
  +            }
  +            break;
  +        case 'drop':
  +            while( valid(0, 1) ) {
  +                ++currentY;
  +            }
  +            tick();
  +            break;
  +    }
  +}
  +
  +// checks if the resulting position of current shape will be feasible
  +function valid( offsetX, offsetY, newCurrent ) {
  +    offsetX = offsetX || 0;
  +    offsetY = offsetY || 0;
  +    offsetX = currentX + offsetX;
  +    offsetY = currentY + offsetY;
  +    newCurrent = newCurrent || current;
  +
  +    for ( var y = 0; y < 4; ++y ) {
  +        for ( var x = 0; x < 4; ++x ) {
  +            if ( newCurrent[ y ][ x ] ) {
  +                if ( typeof board[ y + offsetY ] == 'undefined'
  +                  || typeof board[ y + offsetY ][ x + offsetX ] == 'undefined'
  +                  || board[ y + offsetY ][ x + offsetX ]
  +                  || x + offsetX < 0
  +                  || y + offsetY >= ROWS
  +                  || x + offsetX >= COLS ) {
  +                    if (offsetY == 1 && freezed) {
  +                        lose = true; // lose if the current shape is settled at the top most row
  +                        document.getElementById('playbutton').disabled = false;
  +                    } 
  +                    return false;
  +                }
  +            }
  +        }
  +    }
  +    return true;
  +}
  +
  +function playButtonClicked() {
  +    newGame();
  +    document.getElementById("playbutton").disabled = true;
  +}
  +
  +function newGame() {
  +    clearAllIntervals();
  +    intervalRender = setInterval( render, 30 );
  +    init();
  +    newShape();
  +    lose = false;
  +    interval = setInterval( tick, 400 );
  +}
  +
  +function clearAllIntervals(){
  +    clearInterval( interval );
  +    clearInterval( intervalRender );
  +}
  \ No newline at end of file
  diff --git a/sound/pop.ogg b/sound/pop.ogg
  new file mode 100644
  index 0000000..72c9345
  Binary files /dev/null and b/sound/pop.ogg differ
  diff --git a/style.css b/style.css
  new file mode 100644
  index 0000000..e27ed9b
  --- /dev/null
  +++ b/style.css
  @@ -0,0 +1,18 @@
  +canvas {
  +    display: block;
  +    margin: auto;
  +    border: 1px solid black;
  +}
  +
  +#playbutton {
  +    width: 100px;
  +    height: 50px;
  +    display: block;
  +    margin: auto;
  +    margin-top: 10px;
  +    font-family: Arial, sans-serif;
  +    font-size: 30px;
  +    font-weight: bold;
  +    background-color: white;
  +    cursor: pointer;
  +}
  \ No newline at end of file
